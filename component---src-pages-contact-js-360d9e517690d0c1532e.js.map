{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/content/styles.js","webpack:///./src/components/layout/contact/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_contact__WEBPACK_IMPORTED_MODULE_1__","_utils_i18n__WEBPACK_IMPORTED_MODULE_2__","_ref","location","language","lang","a","createElement","themed","key","props","theme","Section","styled","display","boxSizing","maxWidth","minWidth","maxHeight","minHeight","height","width","flex","space","order","alignSelf","flexWrap","flexDirection","alignItems","justifyContent","backgroundImage","backgroundPosition","backgroundSize","propTypes","Object","assign","Aside","Article","cards","variant","Media","borders","borderColor","borderRadius","boxShadow","backgroundRepeat","opacity","fontSize","color","size","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","data","contact","Contact","label","node","es","en","icon","viewBox","items","_content_styles__WEBPACK_IMPORTED_MODULE_3__","m","rebass__WEBPACK_IMPORTED_MODULE_5__","_effect_icons__WEBPACK_IMPORTED_MODULE_4__","fill","map","el","i","p","textAlign","nick","_public_static_d_373787654_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-contact-js-360d9e517690d0c1532e.js","sourcesContent":["import React from 'react'\nimport Contact from '../components/layout/contact'\nimport { lang }  from '../utils/i18n'\n\nexport default ({ location }) => {\n    const language = lang(location)\n    return(\n        <Contact \n            language={ language }\n        />\n    )\n}\n    \n    \n    /**\n     //import styled  from 'styled-components'\nconst Button = styled.button`\n    border: 0;\n    margin: 0;\n    padding: 0;\n    text-align: inherit;\n    text-transform: inherit;\n    font: inherit;\n    letter-spacing: inherit;\n    background: none;\n    cursor: pointer;\n    overflow: visible;\n\n    display: inline-block;\n    margin-bottom: ${ props => props.theme.u1 };\n    padding: ${ props => props.theme.p1 };\n    border: ${ props => props.theme.b_outlined_border_width } solid ${ props => props.theme.themePrimary };\n    border-radius: 15px 2px 15px 2px;\n    background-color: ${ props => props.theme.white };\n    color: ${ props => props.theme.themePrimary };\n    text-decoration: none;\n    text-transform: uppercase;\n    font-size: inherit;\n    transition: all 1s ease;\n    \n    &:hover,\n    &:focus,\n    &:active {\n        border-color: ${ props => props.theme.themeDark };\n        background-color: ${ props => props.theme.themeDarker };\n        color: ${ props => props.theme.white };\n    }\n    &:disabled{\n        color: ${ props => props.theme.neutralDark };\n        border: ${ props => props.theme.b_outlined_border_width } solid ${ props => props.theme.neutralDark };\n        background-color: ${ props => props.theme.neutralSecondary };\n        cursor: not-allowed;\n    }\n`\n\n    const [formSubject, setSubject] = useState('')\n    const [formEmail, setEmail] = useState('')\n    const [formContent, setContent] = useState('')\n    const [flagForm, setFlagForm] = useState(true)\n    useEffect(() => {\n        formSubject === '' &&\n        formEmail === '' &&\n        formContent === '' ? setFlagForm(true) : setFlagForm(false)\n    })\n    const email = (e) => setEmail(e.target.value)\n    const subject = (e) => setSubject(e.target.value)\n    const content = (e) => setContent(e.target.value) \n    return (\n        <div>\n            <form>\n                <fieldset>\n                    <label>Subject</label>\n                    <input \n                        onChange={ subject }\n                        value={ formSubject }\n                    />\n                </fieldset>\n                <fieldset>\n                    <label>Email</label>\n                    <input \n                        onChange={ email }\n                        value={ formEmail }\n                    />\n                </fieldset>\n                <fieldset>\n                    <label>Content</label>\n                    <input \n                        onChange={ content }\n                        value={ formContent }\n                    />\n                </fieldset>\n                <Button\n                    disabled={ flagForm }\n                >\n                    Enviar\n                </Button>\n            </form>\n        </div>\n    )\n */","import styled from 'styled-components'\nimport {\n    borders,\n    borderColor,\n    borderRadius,\n    boxShadow,\n    backgroundImage,\n    backgroundSize,\n    backgroundPosition,\n    backgroundRepeat,\n    opacity,\n    space,\n    height,\n    width,\n    fontSize,\n    color,\n    flex,\n    size,\n    order,\n    maxWidth,\n    minWidth,\n    maxHeight,\n    minHeight,\n    alignSelf,\n    flexWrap,\n    variant,\n    alignItems,\n    flexDirection,\n    justifyContent,\n} from 'styled-system'\n\nconst themed = key => props => props.theme[key]\n\nexport const Section = styled('section')(\n    {\n        display: 'flex',\n        boxSizing: 'border-box'\n    },\n        maxWidth,\n        minWidth,\n        maxHeight,\n        minHeight,\n        height,\n        width,\n        flex,\n        space,\n        order,\n        alignSelf,\n        flexWrap,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        backgroundImage,\n        backgroundPosition,\n        backgroundSize,\n        themed('Section')\n)\n\nSection.propTypes = {\n    ...maxWidth.propTypes,\n    ...minWidth.propTypes,\n    ...maxHeight.propTypes,\n    ...minHeight.propTypes,\n    ...width.propTypes,\n    ...height.propTypes,\n    ...order.propTypes,\n    ...alignSelf.propTypes,\n    ...flex.propTypes,\n    ...space.propTypes,\n    ...flexWrap.propTypes,\n    ...flexDirection.propTypes,\n    ...alignItems.propTypes,\n    ...justifyContent.propTypes,\n    ...backgroundPosition.propTypes,\n    ...backgroundImage.propTypes,\n    ...backgroundSize.propTypes\n}\n\nexport const Aside = styled('aside')(\n    {\n        display: 'flex',\n        boxSizing: 'border-box'\n    },\n        flex,\n        space,\n        order,\n        alignSelf,\n        flexWrap,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        themed('Aside')\n)\n\nAside.propTypes = {\n    ...order.propTypes,\n    ...alignSelf.propTypes,\n    ...space.propTypes,\n    ...flex.propTypes,\n    ...flexWrap.propTypes,\n    ...flexDirection.propTypes,\n    ...alignItems.propTypes,\n    ...justifyContent.propTypes\n}\n\nexport const Article = styled('article')(\n    {\n        display: 'flex',\n        boxSizing: 'border-box'\n    },\n        maxWidth,\n        minWidth,\n        maxHeight,\n        minHeight,\n        flex,\n        space,\n        order,\n        alignSelf,\n        flexWrap,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        themed('Article')\n)\n\nArticle.propTypes = {\n    ...maxWidth.propTypes,\n    ...minWidth.propTypes,\n    ...maxHeight.propTypes,\n    ...minHeight.propTypes,\n    ...order.propTypes,\n    ...alignSelf.propTypes,\n    ...space.propTypes,\n    ...flex.propTypes,\n    ...flexWrap.propTypes,\n    ...flexDirection.propTypes,\n    ...alignItems.propTypes,\n    ...justifyContent.propTypes\n}\n\nconst cards = variant({ key: 'cards' })\n\nexport const Media = styled('div')(\n    {\n        display: 'flex',\n        boxSizing: 'border-box'\n    },\n    borders,\n    borderColor,\n    borderRadius,\n    boxShadow,\n    backgroundImage,\n    backgroundSize,\n    backgroundPosition,\n    backgroundRepeat,\n    opacity,\n    cards,\n    space,\n    width,\n    fontSize,\n    color,\n    flex,\n    size,\n    order,\n    alignSelf,\n    flexWrap,\n    flexDirection,\n    alignItems,\n    justifyContent,\n    themed('Media')\n)\n\nMedia.propTypes = {\n    ...borders.propTypes,\n    ...borderColor.propTypes,\n    ...borderRadius.propTypes,\n    ...boxShadow.propTypes,\n    ...backgroundImage.propTypes,\n    ...backgroundSize.propTypes,\n    ...backgroundPosition.propTypes,\n    ...backgroundRepeat.propTypes,\n    ...opacity.propTypes,\n    ...cards.propTypes,\n    \n    ...size.propTypes,\n    ...space.propTypes,\n    ...width.propTypes,\n    ...fontSize.propTypes,\n    ...color.propTypes,\n    ...flex.propTypes,\n    ...order.propTypes,\n    ...alignSelf.propTypes,\n\n    ...flexWrap.propTypes,\n    ...flexDirection.propTypes,\n    ...alignItems.propTypes,\n    ...justifyContent.propTypes\n}","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Section, Article, Media } from '../../content/styles'\nimport Icons from '../../effect/icons'\nimport { Heading, Text, Flex } from 'rebass'\nimport { Contact } from '../../../utils/contents'\n\nexport default ({ language }) => {\n    return (\n        <StaticQuery \n        query={ query }\n        render={ data => { \n            const contact = Contact(data)\n            const { label } = (language === 'es' ? contact.node.contact.es : contact.node.contact.en)\n            const { icon } = (language === 'es' ? contact.node.contact.es : contact.node.contact.en)\n            const { viewBox } = (language === 'es' ? contact.node.contact.es : contact.node.contact.en)\n            const { items } = (language === 'es' ? contact.node.contact.es : contact.node.contact.en)\n            return (\n                <Section\n                    m={ 17 }\n                    maxWidth={[ 317, 353, 757, 1013, 1571 ]} \n                    flexWrap='wrap'\n                    flexDirection='column'\n                >\n                    <Flex\n                        alignItems='flex-start'\n                    >\n                        <Icons\n                            width={24}\n                            height={24}\n                            fill={'#000a'}\n                            viewBox={viewBox}\n                        >\n                            { icon }\n                        </Icons>\n                        <Heading\n                            m={1}\n                        >\n                            { label }\n                        </Heading>\n                    </Flex>\n                    <Article>\n                        {\n                            items.map((el,i) => {\n                                return(\n                                        <Media\n                                            key={i}\n                                            p={ 1 }\n                                            m={ 2 }\n                                            alignItems='center'\n                                        >\n                                            <Icons\n                                                width={16}\n                                                height={16}\n                                                fill={'#000a'}\n                                                viewBox={el.viewBox}\n                                                >\n                                                { el.icon }\n                                            </Icons>\n                                            <Text\n                                                m={1}\n                                                fontSize={ 2 }\n                                                textAlign='right'\n                                            >\n                                                { el.nick }\n                                            </Text>\n                                        </Media>\n                                    )\n                                }\n                            )\n                        }\n                    </Article>\n                </Section>\n                )\n            }}\n        />\n    )\n}\n\n\nconst query = graphql`\n    query {\n        allContentsJson {\n            edges {\n                node {\n                    contact {\n                        en {\n                            label\n                            viewBox\n                            icon\n                            items {\n                                label\n                                icon\n                                nick\n                                viewBox\n                            }\n                        }\n                        es {\n                            label\n                            viewBox\n                            icon\n                            items {\n                                label\n                                icon\n                                nick\n                                viewBox\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\n/*\n<Icons\nwidth={16}\nheight={16}\nfill={'#000a'}\nviewBox={el.viewBox}\n>\n{ 'el.icon' }\n</Icons>\n*/"],"sourceRoot":""}