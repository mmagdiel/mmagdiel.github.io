{"version":3,"sources":["webpack:///./src/components/content/styles.js","webpack:///./src/components/content/about/index.js","webpack:///./src/components/content/hobbies/index.js","webpack:///./src/components/content/attitudes/index.js","webpack:///./src/components/content/education/index.js","webpack:///./src/components/content/experience/index.js","webpack:///./src/components/content/skills/styles.js","webpack:///./src/components/content/skills/index.js","webpack:///./src/utils/chunk.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/core-js/modules/_strict-method.js"],"names":["themed","key","props","theme","Section","styled","display","boxSizing","maxWidth","minWidth","maxHeight","minHeight","height","width","flex","space","order","alignSelf","flexWrap","flexDirection","alignItems","justifyContent","backgroundImage","backgroundPosition","backgroundSize","propTypes","Object","assign","Aside","Article","cards","variant","Media","borders","borderColor","borderRadius","boxShadow","backgroundRepeat","opacity","fontSize","color","size","__webpack_exports__","_ref","language","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","data","about","About","node","allFile","edges","name","publicURL","quate","en","es","greeting","description","_styles__WEBPACK_IMPORTED_MODULE_5__","m","rebass__WEBPACK_IMPORTED_MODULE_4__","mx","p","src","alt","textAlign","lineHeight","_public_static_d_3411216735_json__WEBPACK_IMPORTED_MODULE_1__","hobbies","Hobbies","title","icon","viewBox","items","_effect_icons__WEBPACK_IMPORTED_MODULE_6__","fill","map","el","i","_public_static_d_3098623129_json__WEBPACK_IMPORTED_MODULE_1__","attitudes","Attitudes","_public_static_d_2664971133_json__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_4__","education","Education","_styles__WEBPACK_IMPORTED_MODULE_6__","rebass__WEBPACK_IMPORTED_MODULE_5__","_effect_icons__WEBPACK_IMPORTED_MODULE_7__","degree","timeperiod","institution","filter","my","_public_static_d_21339200_json__WEBPACK_IMPORTED_MODULE_1__","experience","Experience","company","position","_public_static_d_3188088547_json__WEBPACK_IMPORTED_MODULE_1__","Tooltip","Box","withConfig","displayName","componentId","visibility","react_default","gatsby_browser_entry","skills","Skills","merge","e","temp","ee","vw","window","innerWidth","n","undefined","sort","ella","length","b","Math","ceil","c","round","fake","Array","dummy","forEach","push","arr","array","chunked_arr","last","chunk","styles","dist","icons","flag","aria-label","_2182079717","$export","__webpack_require__","aFunction","toObject","fails","$sort","test","P","F","comparefn","call","this","module","exports","method","arg"],"mappings":"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","file":"0-1fa4ea31fea6e52f6bdd.js","sourcesContent":["import styled from 'styled-components'\nimport {\n    borders,\n    borderColor,\n    borderRadius,\n    boxShadow,\n    backgroundImage,\n    backgroundSize,\n    backgroundPosition,\n    backgroundRepeat,\n    opacity,\n    space,\n    height,\n    width,\n    fontSize,\n    color,\n    flex,\n    size,\n    order,\n    maxWidth,\n    minWidth,\n    maxHeight,\n    minHeight,\n    alignSelf,\n    flexWrap,\n    variant,\n    alignItems,\n    flexDirection,\n    justifyContent,\n} from 'styled-system'\n\nconst themed = key => props => props.theme[key]\n\nexport const Section = styled('section')(\n    {\n        display: 'flex',\n        boxSizing: 'border-box'\n    },\n        maxWidth,\n        minWidth,\n        maxHeight,\n        minHeight,\n        height,\n        width,\n        flex,\n        space,\n        order,\n        alignSelf,\n        flexWrap,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        backgroundImage,\n        backgroundPosition,\n        backgroundSize,\n        themed('Section')\n)\n\nSection.propTypes = {\n    ...maxWidth.propTypes,\n    ...minWidth.propTypes,\n    ...maxHeight.propTypes,\n    ...minHeight.propTypes,\n    ...width.propTypes,\n    ...height.propTypes,\n    ...order.propTypes,\n    ...alignSelf.propTypes,\n    ...flex.propTypes,\n    ...space.propTypes,\n    ...flexWrap.propTypes,\n    ...flexDirection.propTypes,\n    ...alignItems.propTypes,\n    ...justifyContent.propTypes,\n    ...backgroundPosition.propTypes,\n    ...backgroundImage.propTypes,\n    ...backgroundSize.propTypes\n}\n\nexport const Aside = styled('aside')(\n    {\n        display: 'flex',\n        boxSizing: 'border-box'\n    },\n        flex,\n        space,\n        order,\n        alignSelf,\n        flexWrap,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        themed('Aside')\n)\n\nAside.propTypes = {\n    ...order.propTypes,\n    ...alignSelf.propTypes,\n    ...space.propTypes,\n    ...flex.propTypes,\n    ...flexWrap.propTypes,\n    ...flexDirection.propTypes,\n    ...alignItems.propTypes,\n    ...justifyContent.propTypes\n}\n\nexport const Article = styled('article')(\n    {\n        display: 'flex',\n        boxSizing: 'border-box'\n    },\n        maxWidth,\n        minWidth,\n        maxHeight,\n        minHeight,\n        flex,\n        space,\n        order,\n        alignSelf,\n        flexWrap,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        themed('Article')\n)\n\nArticle.propTypes = {\n    ...maxWidth.propTypes,\n    ...minWidth.propTypes,\n    ...maxHeight.propTypes,\n    ...minHeight.propTypes,\n    ...order.propTypes,\n    ...alignSelf.propTypes,\n    ...space.propTypes,\n    ...flex.propTypes,\n    ...flexWrap.propTypes,\n    ...flexDirection.propTypes,\n    ...alignItems.propTypes,\n    ...justifyContent.propTypes\n}\n\nconst cards = variant({ key: 'cards' })\n\nexport const Media = styled('div')(\n    {\n        display: 'flex',\n        boxSizing: 'border-box'\n    },\n    borders,\n    borderColor,\n    borderRadius,\n    boxShadow,\n    backgroundImage,\n    backgroundSize,\n    backgroundPosition,\n    backgroundRepeat,\n    opacity,\n    cards,\n    space,\n    width,\n    fontSize,\n    color,\n    flex,\n    size,\n    order,\n    alignSelf,\n    flexWrap,\n    flexDirection,\n    alignItems,\n    justifyContent,\n    themed('Media')\n)\n\nMedia.propTypes = {\n    ...borders.propTypes,\n    ...borderColor.propTypes,\n    ...borderRadius.propTypes,\n    ...boxShadow.propTypes,\n    ...backgroundImage.propTypes,\n    ...backgroundSize.propTypes,\n    ...backgroundPosition.propTypes,\n    ...backgroundRepeat.propTypes,\n    ...opacity.propTypes,\n    ...cards.propTypes,\n    \n    ...size.propTypes,\n    ...space.propTypes,\n    ...width.propTypes,\n    ...fontSize.propTypes,\n    ...color.propTypes,\n    ...flex.propTypes,\n    ...order.propTypes,\n    ...alignSelf.propTypes,\n\n    ...flexWrap.propTypes,\n    ...flexDirection.propTypes,\n    ...alignItems.propTypes,\n    ...justifyContent.propTypes\n}","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Image, Text, Card } from 'rebass'\nimport { Section, Aside, Article } from '../styles'\nimport { About } from '../../../utils/contents'\n\nexport default ({ language }) => {\n    return (\n        <StaticQuery \n            query={ query }\n            render={ data => {              \n                const about = About(data)\n                const [ { node } ] = data.allFile.edges\n                const { name } = node\n                const { publicURL } = node\n                const { quate } = (language === 'en' ? about.node.about.en : about.node.about.es)\n                const { greeting } = (language === 'en' ? about.node.about.en : about.node.about.es)\n                const { description } = (language === 'en' ? about.node.about.en : about.node.about.es)\n                return (\n                    <Section\n                        m={ 17 }\n                        maxWidth={[ 317, 353, 757, 1013, 1571 ]} \n                        flexWrap='wrap'\n                        flexDirection='row'\n                        alignItems='stretch'\n                        justifyContent='center'\n                    >\n                        <Article\n                            m={ 3 }\n                        >\n                            <Card\n                                width={[ 300, 311 ]}\n                                mx='auto'\n                                p={ 2 }\n                                variant='primary'\n                            >\n                                <Image \n                                    width={ 300 } \n                                    src={ publicURL } \n                                    alt={ name } \n                                />\n                                <Text\n                                    textAlign='right'\n                                >\n                                    Magdiel Marquez\n                                </Text>\n                            </Card>\n                        </Article>\n                        <Aside\n                            m={ 2 }\n                            flex='0 1 307px'\n                            flexDirection='column'\n                            justifyContent='space-around'\n                        >\n                            <Text>\n                                { greeting }\n                            </Text>\n                            <Text\n                                lineHeight='normal'\n                                fontSize={ 3 }\n                            >\n                                { description }\n                            </Text>\n                            <Text\n                                lineHeight='normal'\n                                fontSize={ 3 }\n                                textAlign='right'\n                            >\n                                { quate }\n                            </Text>\n                        </Aside>\n                    </Section>\n                )}\n            }\n        />\n    )\n}\n\nconst query = graphql`\n    query {\n        allFile (\n            filter:{\n                name: {\n                    eq: \"me\"\n                }\n            }) {\n            edges {\n                node {\n                    name\n                    publicURL\n                }\n            }\n        }\n        allContentsJson {\n            edges {\n                node {\n                    about {\n                        es {\n                            description\n                            greeting\n                            quate\n                        }\n                        en {\n                            description\n                            greeting\n                            quate\n                        }\n                    }\n                } \n            }\n        }\n    }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Flex, Heading, Text } from 'rebass'\nimport { Media, Section, Article } from '../styles'\nimport Icons from '../../effect/icons'\nimport { Hobbies } from '../../../utils/contents'\n\nexport default ({ language }) => {\n    return (\n        <StaticQuery \n            query={ query }\n            render={ data => { \n                const hobbies = Hobbies(data)\n                const { title } = (language === 'es' ? hobbies.node.hobbies.es : hobbies.node.hobbies.en)\n                const { icon } = (language === 'es' ? hobbies.node.hobbies.es : hobbies.node.hobbies.en)\n                const { viewBox } = (language === 'es' ? hobbies.node.hobbies.es : hobbies.node.hobbies.en)\n                const { items } = (language === 'es' ? hobbies.node.hobbies.es : hobbies.node.hobbies.en)\n                return (\n                    <Section\n                        m={ 17 }\n                        maxWidth={[ 317, 353, 757, 1013, 1571 ]} \n                        flexWrap='wrap'\n                        flexDirection='column'\n                    >\n                        <Flex\n                            alignItems='flex-start'\n                        >\n                            <Icons\n                                width={24}\n                                height={24}\n                                fill={'#000a'}\n                                viewBox={viewBox}\n                            >\n                                { icon }\n                            </Icons>\n                            <Heading\n                                m={1}\n                            >\n                                { title }\n                            </Heading>\n                        </Flex>\n                        <Article>\n                            {\n                                items.map((el,i) => {\n                                    return(\n                                            <Media\n                                                key={i}\n                                                p={ 1 }\n                                                m={ 2 }\n                                                alignItems='center'\n                                            >\n                                                <Icons\n                                                    width={16}\n                                                    height={16}\n                                                    fill={'#000a'}\n                                                    viewBox={el.viewBox}\n                                                    >\n                                                    { el.icon }\n                                                </Icons>\n                                                <Text\n                                                    m={1}\n                                                    fontSize={ 2 }\n                                                    textAlign='right'\n                                                >\n                                                    { el.name }\n                                                </Text>\n                                            </Media>\n                                        )\n                                    }\n                                )\n                            }\n                        </Article>\n                     </Section>\n                )}\n            }\n        />\n    )\n\n}\n\nconst query = graphql`\n    query {\n        allContentsJson {\n            edges {\n                node {\n                    hobbies{\n                        es {\n                            title\n                            viewBox\n                            icon\n                            items {\n                                name\n                                viewBox\n                                icon\n                            }\n                        }\n                        en {\n                            title\n                            viewBox\n                            icon\n                            items {\n                                name\n                                viewBox\n                                icon\n                            }\n                        }\n                    }\n                }\n            }\n        }  \n    }\n`\n\n/**\n    query {\n        allFile(filter: {\n                extension: {\n                    eq: \"json\"    \n                }\n            } \n        ) {\n            edges {\n                node {\n                    childContentsJson {\n                        id\n                        hobbies {\n                            es {\n                                title\n                                icon\n                                viewBox\n                                items {\n                                    name\n                                    icon\n                                    viewBox\n                                }\n                            }\n                            en {\n                                title\n                                icon\n                                viewBox\n                                items {\n                                    name\n                                    icon\n                                    viewBox\n                                }\n                            }\n                        }\n                    } \n                }\n            }\n        }\n    }\n */","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Heading, Text, Flex } from 'rebass'\nimport { Media, Section, Article } from '../styles'\nimport Icons from '../../effect/icons'\nimport { Attitudes } from '../../../utils/contents'\n\nexport default ({ language }) => {\n    return (\n        <StaticQuery \n            query={ query }\n            render={ data => { \n                const attitudes = Attitudes(data)\n                const { title } = (language === 'es' ? attitudes.node.attitudes.es : attitudes.node.attitudes.en)\n                const { icon } = (language === 'es' ? attitudes.node.attitudes.es : attitudes.node.attitudes.en)\n                const { viewBox } = (language === 'es' ? attitudes.node.attitudes.es : attitudes.node.attitudes.en)\n                const { items } = (language === 'es' ? attitudes.node.attitudes.es : attitudes.node.attitudes.en)\n                return (\n                    <Section\n                        m={ 17 }\n                        maxWidth={[ 317, 353, 757, 1013, 1571 ]} \n                        flexWrap='wrap'\n                        flexDirection='column'\n                    >\n                        <Flex\n                            alignItems='flex-start'\n                        >\n                            <Icons\n                                width={24}\n                                height={24}\n                                fill={'#000a'}\n                                viewBox={viewBox}\n                            >\n                                { icon }\n                            </Icons>\n                            <Heading\n                                m={1}\n                            >\n                                { title }\n                            </Heading>\n                        </Flex>\n                        <Article>\n                            {\n                                items.map((el,i) => {\n                                    return(\n                                            <Media\n                                                key={i}\n                                                p={ 1 }\n                                                m={ 2 }\n                                                alignItems='center'\n                                            >\n                                                <Icons\n                                                    width={16}\n                                                    height={16}\n                                                    fill={'#000a'}\n                                                    viewBox={el.viewBox}\n                                                    >\n                                                    { el.icon }\n                                                </Icons>\n                                                <Text\n                                                    m={1}\n                                                    fontSize={ 2 }\n                                                    textAlign='right'\n                                                >\n                                                    { el.name }\n                                                </Text>\n                                            </Media>\n                                        )\n                                    }\n                                )\n                            }\n                        </Article>\n                     </Section>\n                )}\n            }\n        />\n    )\n}\n\nconst query = graphql`\n    query {\n        allContentsJson {\n            edges {\n                node {\n                    attitudes {\n                        es {\n                            title\n                            viewBox\n                            icon\n                            items {\n                            name\n                            viewBox\n                            icon\n                            }\n                        }\n                        en {\n                            title\n                            viewBox\n                            icon\n                            items {\n                            name\n                            viewBox\n                            icon\n                            }\n                        }\n                    }\n                }\n            }\n        }  \n    }\n`","import React from 'react'\nimport { Education } from '../../../utils/contents'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Image, Text, Heading, Flex } from 'rebass'\nimport { Section, Article, Aside } from '../styles'\nimport Icons from '../../effect/icons'\n\nexport default ({ language }) => {\n    return (\n        <StaticQuery \n            query={ query }\n            render={ data => { \n                const education = Education(data)\n                const { edges } = data.allFile\n                const { items } = (language === 'es' ? education.node.education.es : education.node.education.en )\n                const { title } = (language === 'es' ? education.node.education.es : education.node.education.en )\n                const { viewBox } = (language === 'es' ? education.node.education.es : education.node.education.en )\n                const { icon } = (language === 'es' ? education.node.education.es : education.node.education.en )\n                return(\n                    <Section\n                        m={ 17 }\n                        maxWidth={[ 317, 353, 757, 1013, 1571 ]} \n                        flexWrap='wrap'\n                        flexDirection='column'\n                    >\n                        <Flex\n                            alignItems='flex-start'\n                        >\n                            <Icons\n                                width={24}\n                                height={24}\n                                fill={'#000a'}\n                                viewBox={viewBox}\n                            >\n                                { icon }\n                            </Icons>\n                            <Heading\n                                m={1}\n                            >\n                                { title }\n                            </Heading>\n                        </Flex>\n                        {\n                            items.map(el => {\n                                const { degree } = el\n                                const { timeperiod } = el\n                                const { description } = el\n                                const { institution } = el\n                                const { icon } = el\n                                const [ { node } ] = edges.filter(el => el.node.name === icon)\n                                const { publicURL } = node\n                                const { name } = node\n                                return(<Flex\n                                        my={ 2 }\n                                    >\n                                        <Aside\n                                            m={ 1 }\n                                        >\n                                            <Image \n                                                src={publicURL}\n                                                alt={name}\n                                                width={110}\n                                                height={110}\n                                            />\n                                        </Aside>\n                                        <Article\n                                            m={ 1 }\n                                            my={ 3 }\n                                            flexDirection='column'\n                                        >\n                                            <Text>\n                                                { institution }\n                                            </Text>\n                                            <Text>\n                                                { degree + ', ' + timeperiod  }\n                                            </Text>\n                                            <Text>\n                                                { description }\n                                            </Text>\n                                        </Article>\n                                    </Flex>\n                                )\n                            })\n                        }\n                    </Section>\n                )\n            }}\n        />\n    )\n}\n\nconst query = graphql`\n    query {\n        allFile(        \n            filter: {\n                extension: {\n                    eq: \"png\"    \n                    }\n                } \n            ) {\n            edges {\n                node {\n                    id\n                    name\n                    publicURL\n                }\n            }\n        }\n        allContentsJson {\n            edges {\n                node {\n                    education {\n                        en {\n                            title\n                            icon\n                            viewBox\n                            items {\n                                icon\n                                degree\n                                timeperiod\n                                description\n                                institution\n                            }\n                        }\n                        es {\n                            title\n                            icon\n                            viewBox\n                            items {\n                                icon\n                                degree\n                                timeperiod\n                                description\n                                institution\n                            }\n                        }\n                    }\n                }\n            }\n        }  \n    }\n`","import React from 'react'\nimport { Experience } from '../../../utils/contents'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Image, Text, Heading, Flex } from 'rebass'\nimport { Section, Article, Aside } from '../styles'\nimport Icons from '../../effect/icons'\n\nexport default ({ language }) => {\n    return (\n        <StaticQuery \n            query={ query }\n            render={ data => { \n                const experience = Experience(data)\n                const { edges } = data.allFile\n                const { items } = (language === 'es' ? experience.node.experience.es : experience.node.experience.en )\n                const { title } = (language === 'es' ? experience.node.experience.es : experience.node.experience.en )\n                const { viewBox } = (language === 'es' ? experience.node.experience.es : experience.node.experience.en )\n                const { icon } = (language === 'es' ? experience.node.experience.es : experience.node.experience.en )\n                return(\n                    <Section\n                        m={ 17 }\n                        maxWidth={[ 317, 353, 757, 1013, 1571 ]} \n                        flexWrap='wrap'\n                        flexDirection='column'\n                    >\n                        <Flex\n                            alignItems='flex-start'\n                        >\n                            <Icons\n                                width={24}\n                                height={24}\n                                fill={'#000a'}\n                                viewBox={viewBox}\n                            >\n                                { icon }\n                            </Icons>\n                            <Heading\n                                m={1}\n                            >\n                                { title }\n                            </Heading>\n                        </Flex>\n                        {\n                            items.map(el => {\n                                const { company } = el\n                                const { position } = el\n                                const { timeperiod } = el\n                                const { description } = el\n                                const { icon } = el\n                                const [ { node } ] = edges.filter(el => el.node.name === icon)\n                                const { publicURL } = node\n                                const { name } = node\n                                return(<Flex\n                                        my={ 2 }\n                                    >\n                                        <Aside\n                                            m={ 1 }\n                                        >\n                                            <Image \n                                                src={publicURL}\n                                                alt={name}\n                                                width={100}\n                                                height={100}\n                                            />\n                                        </Aside>\n                                        <Article\n                                            m={ 1 }\n                                            my={ 3 }\n                                            flexDirection='column'\n                                        >\n                                            <Text>\n                                                { company }\n                                            </Text>\n                                            <Text>\n                                                { position + '. ' + timeperiod}\n                                            </Text>\n                                            <Text>\n                                                { description }\n                                            </Text>\n                                        </Article>\n                                    </Flex>\n                                )\n                            })\n                        }\n                    </Section>\n                )\n            }}\n        />\n    )\n}\n\nconst query = graphql`\n    query {\n        allFile(        \n            filter: {\n                extension: {\n                    eq: \"png\"    \n                    }\n                } \n            ) {\n            edges {\n                node {\n                    id\n                    name\n                    publicURL\n                }\n            }\n        }\n        allContentsJson {\n            edges {\n                node {\n                    experience {\n                        en {\n                            title\n                            icon\n                            viewBox\n                            items {\n                                icon\n                                company\n                                position\n                                timeperiod\n                                description\n                            }\n                        }\n                        es {\n                            title\n                            icon\n                            viewBox\n                            items {\n                                icon\n                                company\n                                position\n                                timeperiod\n                                description\n                            }\n                        }\n                    }\n                }\n            }\n        }  \n    }\n`","import styled from 'styled-components'\nimport { Box } from \"rebass\"\n \nexport const Tooltip = styled(Box)`\n    visibility: ${props => props.visibility};\n\n    &:before, &:after {\n        position: absolute;\n        -webkit-transform: translate3d(0, 0, 0);\n        -moz-transform: translate3d(0, 0, 0);\n        transform: translate3d(0, 0, 0);\n        visibility: hidden;\n        opacity: 0;\n        z-index: 1000000;\n        pointer-events: none;\n        -webkit-transition: 0.3s ease;\n        -moz-transition: 0.3s ease;\n        transition: 0.3s ease;\n        -webkit-transition-delay: 0ms;\n        -moz-transition-delay: 0ms;\n        transition-delay: 0ms;\n    }\n    \n    &:hover:before, &:hover:after {\n        visibility: visible;\n        opacity: 1; \n        -webkit-transition-delay: 100ms;\n        -moz-transition-delay: 100ms;\n        transition-delay: 100ms; \n    }\n        \n    &:before {\n        content: '';\n        position: absolute;\n        background: transparent;\n        border: 6px solid transparent;\n        z-index: 1000001; \n    }\n    \n    &:after {\n        background: #383838;\n        color: white;\n        padding: 8px 10px;\n        font-size: 12px;\n        font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n        line-height: 12px;\n        white-space: nowrap; \n        white-space: normal;\n        line-height: 1.4em;\n        word-wrap: break-word;\n        width: 150px;\n    }\n    \n    &[aria-label]:after {\n        content: attr(aria-label); \n    }\n    \n    &[data-hint]:after {\n        content: attr(data-hint); \n    }\n    \n    [aria-label='']:before, [aria-label='']:after,\n    [data-hint='']:before,\n    [data-hint='']:after {\n      display: none !important; \n    }\n`","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Image, Text, Heading, Flex } from 'rebass'\nimport { Section, Article, Media } from '../styles'\nimport { Tooltip } from './styles'\nimport Icons from '../../effect/icons'\nimport chunk from '../../../utils/chunk'\nimport { Skills } from '../../../utils/contents'\n\nexport default ({ language }) => {\n    return (\n        <StaticQuery \n            query={ query }\n            render={ data => { \n                const skills = Skills(data)\n                const { edges } = data.allFile\n                const { title } = (language === 'es' ? \n                    skills.node.skills.es : skills.node.skills.en)\n                const { icon } = (language === 'es' ? \n                    skills.node.skills.es : skills.node.skills.en)\n                const { viewBox } = (language === 'es' ? \n                    skills.node.skills.es : skills.node.skills.en)\n                const { items } = (language === 'es' ? \n                    skills.node.skills.es : skills.node.skills.en)\n\n                    const merge = edges.map(e => {\n                        const temp = items.filter(ee => (\n                            ee.icon === e.node.name)\n                        )\n                        return {...e.node, ...temp[0]}\n                    }\n                )\n                const vw = (typeof window !== 'undefined' ?  window.innerWidth : null)\n                const n = (vw > 1400 ? 7 : (\n                            vw > 750 ? 5 : (\n                                vw > 450 ? 3 : 2)\n                            )\n                        )\n                const temp = merge.filter(el => el.icon !== undefined)\n                temp.sort(\n                    (el,ella) => {\n                        if(el.order > ella.order) {\n                            return 1\n                        }\n                        if(el.order < ella.order) {\n                            return -1\n                        }\n                        return 0\n                })\n                const a = (temp.length / n)\n                const b = Math.ceil(a) - a\n                const c = Math.round(b * n)\n                const fake = Array(c).fill(0)\n                const dummy = {\"publicURL\": \"\", \"name\": \"\", \"icon\": \"\"}\n                fake.forEach(() => temp.push(dummy))\n                const arr = chunk(temp,n)\n                return (\n                    <Section\n                        m={ 17 }\n                        maxWidth={[ 317, 353, 757, 1013, 1571 ]} \n                        flexWrap='wrap'\n                        flexDirection='column'\n                    >\n                        <Flex\n                            alignItems='flex-start'\n                        >\n                            <Icons\n                                width={24}\n                                height={24}\n                                fill={'#000a'}\n                                viewBox={viewBox}\n                            >\n                                { icon }\n                            </Icons>\n                            <Heading\n                                m={1}\n                            >\n                                { title }\n                            </Heading>\n                        </Flex>\n                        {\n                            arr.map((el, i) => {\n                                return (\n                                    <Article\n                                        key={i}\n                                        m={1}\n                                        flexDirection='row'\n                                    >\n                                        {\n                                            el.map((ella,i) => {\n                                                const { publicURL } = ella\n                                                const { name } = ella\n                                                const { icon } = ella\n                                                const flag = publicURL ? 'visible' : 'hidden' \n                                                const { description } = ella\n                                                const { order } = ella\n                                                return (\n                                                    <Tooltip\n                                                        key={i}\n                                                        aria-label={ description }\n                                                        visibility={ flag }\n                                                        order={ order }\n                                                        flex=\"1\"\n                                                    >\n                                                        <Media\n                                                            size={[126,96]}\n                                                            flexDirection='column'\n                                                            justifyContent='space-between'\n                                                            p={ 1 }\n                                                            m={ 2 }\n                                                            variant='icons'\n                                                        >\n                                                            <Image \n                                                                width={3/4}\n                                                                src={ publicURL } \n                                                                alt={ icon } \n                                                            />\n                                                            <Text\n                                                                alignSelf='flex-end'\n                                                                fontSize={ 2 }\n                                                                textAlign='right'\n                                                            >\n                                                                { name }\n                                                            </Text>\n                                                        </Media> \n                                                    </Tooltip>\n                                                )}\n                                            )\n                                        }\n                                    </Article>\n                                )\n                            })\n                        }\n                    </Section>\n                )}\n            }\n        />\n    )\n}\n\nconst query = graphql`\nquery {\n    allFile(\n        filter: {\n            extension: {\n                eq: \"svg\"    \n            }\n        } \n    ) {\n        edges {\n            node {\n                name\n                publicURL\n            }\n        }\n    }\n    allContentsJson{\n      edges{\n        node {\n          skills {\n            es {\n              title\n              viewBox\n              icon\n              items {\n                name\n                icon\n                order\n                description\n              }\n            }\n            en {\n              title\n              viewBox\n              icon\n              items{\n                name\n                icon\n                order\n                description\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n/*\nconst query = graphql`\n    query {\n        allFile(\n            filter: {\n                extension: {\n                    in: [\"svg\", \"json\"]    \n                }\n            } \n        ) {\n            edges {\n                node {\n                    name\n                    publicURL\n                    childContentsJson {\n                        skills {\n                            es {\n                                title\n                                icon\n                                viewBox\n                                items {\n                                    name\n                                    icon\n                                    order\n                                    description\n                                }\n                            }\n                            en {\n                                title\n                                icon\n                                viewBox\n                                items {\n                                    name\n                                    icon\n                                    order\n                                    description\n                                }\n                            }\n                        }\n                    } \n                }\n            }\n        }\n    }\n`\n*/","export default (array, size) => {\n    const chunked_arr = [];\n    for (let i = 0; i < array.length; i++) {\n      const last = chunked_arr[chunked_arr.length - 1];\n      if (!last || last.length === size) {\n        chunked_arr.push([array[i]]);\n      } else {\n        last.push(array[i]);\n      }\n    }\n    return chunked_arr;\n}","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n"],"sourceRoot":""}